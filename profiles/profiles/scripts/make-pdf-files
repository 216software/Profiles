#! /usr/bin/env python

# vim: set expandtab ts=4 sw=4 filetype=python fileencoding=utf8:

import argparse
import collections
import logging
import os

import pdfkit

from profiles import configwrapper
from profiles import pg

log = logging.getLogger("pyprofiles.scripts.make_pdf_files")

def set_up_args():

    ap = argparse.ArgumentParser(
        description="Write out PDF files for all screens x locations")

    ap.add_argument("yaml_file_name")

    return ap.parse_args()

"""
tab_names = [
    "overview",
    "progress",
    "stabilization",
    "safety",
    "stabilization",
    "community",
    "health",
    "education",
    "workforce",
    "economy",
    "population"
]
"""
tab_names = ["workforce" ]

if __name__ == "__main__":

    args = set_up_args()

    cw = configwrapper.ConfigWrapper.load_yaml(args.yaml_file_name)

    cw.configure_logging()

    pgconn = cw.get_pgconn()

    if not os.path.isdir(cw.pdf_files_directory):
        os.mkdir(cw.pdf_files_directory)
        log.info("Created pdf files directory")

    pdf_kit_options = {
        'javascript-delay': 2000,
        'print-media-type': ''
    }

    for loc in pg.locations.Location.select_all(pgconn):
        log.debug('printing pdf for {0}'.format(loc.title))

        for tab_name in tab_names:

            html_url = "{web_host}/#/{tab_name}?location_uuid={loc_uuid}".format(
                web_host=cw.web_host,
                tab_name=tab_name,
                loc_uuid=loc.location_uuid)

            pdf_file_path = os.path.join(
                cw.pdf_files_directory,
                "{0}-{1}.pdf".format(
                    tab_name,
                    loc.print_friendly_name))

            do_it_again = True

            while do_it_again:
                try:
                    pdfkit.from_url(
                        html_url,
                        pdf_file_path,
                        pdf_kit_options)
                    do_it_again = False

                except Exception as e:
                    log.info("trying {0}".format(html_url))
                    log.debug('gotta do it again')
                    do_it_again = True

            log.info("Wrote {0}".format(pdf_file_path))

    # Write Indicator table pdf files

    for ind in pg.indicators.Indicator.select_all(pgconn):

        html_url = "{web_host}/#indicator-table?indicator_uuid={ind_uuid}".\
            format(web_host = cw.web_host,
            ind_uuid=ind.indicator_uuid)

        pdf_file_path = os.path.join(
            cw.pdf_files_directory,
            "Indicator-Values-{0}.pdf".format(
                ind.title))

        do_it_again = True

        while do_it_again:
            try:
                pdfkit.from_url(
                    html_url,
                    pdf_file_path,
                    pdf_kit_options)
                do_it_again = False

            except Exception as e:
                log.info("trying {0}".format(html_url))
                log.debug('gotta do it again')
                do_it_again = True

        log.info("Wrote {0}".format(pdf_file_path))


    log.info("All done writing PDF files!")


