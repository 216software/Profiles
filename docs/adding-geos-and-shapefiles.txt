++++++++++++++++++++++++++++++++++
Adding Geographies and Shape files
++++++++++++++++++++++++++++++++++

source we'll work off of:
https://github.com/ProvidencePlan/Profiles/wiki/Geographies-in-Profiles


-   Figured out why maps aren't appearing: GO /shp (shape) runs
    the following query::


    WITH targ_levs AS (
        SELECT maps_polygonmapfeature.id as geom_id,
        maps_polygonmapfeature.geo_key,
        ST_SimplifyPreserveTopology(maps_polygonmapfeature.geom, 0.001) AS geom,
        profiles_georecord.id as id, profiles_georecord.slug,
        profiles_georecord.name as label

        FROM maps_polygonmapfeature,

        profiles_georecord

        "+ where_clause +
        "maps_polygonmapfeature.geo_key=profiles_georecord.geo_id), targ_geom

        AS (
            SELECT id, geo_key, ST_SimplifyPreserveTopology(geom, 0.001) AS
            geom FROM maps_polygonmapfeature WHERE id IN (" + cleaned_geoms + ")
            FROM targ_levs, targ_geom WHERE ST_Area(ST_Intersection(targ_levs.geom,
            targ_geom.geom)) > ST_Area(targ_geom.geom)/2 ORDER BY
            targ_levs.geo_key"
    }

Therefore, we need to get some map data in our database...


What does /geos=1 give back?

Uses this lookup::
    SELECT profiles_georecord.id, profiles_georecord.geo_id,
    profiles_georecord.slug, profiles_georecord.name FROM
    profiles_geolevel FULL JOIN profiles_georecord ON
    profiles_georecord.level_id = profiles_geolevel.id WHERE
    profiles_geolevel.slug=1


If that table is empty, then obviously there's nothing to look up.
So we've gotta figure out how to get some shp files.


Here's how to set it up
-----------------------

1. First enter the admin section of the webapge (/admin) login with
   the username and password that you used when you did syncdb.

   If you forgot the one you made, or want to add another admin user,
   issue the following command::

       python manage.py createsuperuser

2. Once you're in to the admin interface, click on 'Shape Files'.
   There should already be a set of GeoLevels created, from the
   migration of the DB that we've completed earlier.

   Then click 'Add new' and we'll be able to upload our own shapefile.

   The shape files can be obtained from the Census Bureau here:

   https://www.census.gov/geo/maps-data/data/cbf/cbf_tracts.html

3. I've added a sample map in this folder::

      sample_maps/PA-county-shapes.zip

4. The upload screen asks us for a few fields -- these fields will map
   the shape files back to the geographies already defined in our
   database. (table profiles_georecords)

   We should have already a few counties defined from using syncdb,
   namely Allegheny County, Beaver County and Adams County.

   We'll map these counties to shapes.

5. We'll go field by field when we upload the file --

   - Name -- choose your own -- in this case maybe
   something like 'PA County Shapes'

   - Label Column -- This is the label for the shape, in case the label
     should be the name of the county. It maps to columns on the
     shapefiles that we're importing. In this case, it's fairly simple,
     just : 'Name'

  -  Geo Key Column -- This datapoint should be the column name in the
     shapefile that maps back to our profiles_georecords -- in this
     case, the column is called : 'COUNTYFP'

  -  Geo meta key column -- This is optional, but seems to function as
     the parent geo id -- so in this case we want the column : 'STATEFP'
     since each of the columns are contained within the state geo record
     ID.

  -  Geom Type -- set this to 'polygon'

  -  Shape File -- choose the zip file in /sample_maps -- upload the
     whole zip file

  -  color -- seems to let you select a color for the map (in HEX)

  -  Zoom Threshold -- This is at what level the map appears -- counties
     seem to have a level of 7, so let's set it to that or something
     less

6. OK now click 'Save' and the shapefile should get uploaded, and the
   database updated accordingly.

7. One final step -- the COUNTYFP only provides 3 digits of the county,
   whereas our profiles_georecord geo_keys counties are all preceded with
   '42'. So if the county id is '007', it won't match in our database
   without the preceding '42'.

   Run the following query to update the geo_keys::

       update maps_polygonmapfeature set geo_key = CONCAT('42', geo_key);

8. Now hit the link below and you should see the shape drawn in the map!

    http://localhost:8000/profiles/county/42001/overview/










.. vim:set syntax=rst:
